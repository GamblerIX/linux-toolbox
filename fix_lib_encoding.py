#!/usr/bin/env python3
# -*- coding: utf-8 -*-

def fix_lib_encoding():
    """修复lib库文件的中文编码问题"""
    
    # 扩展的乱码映射表
    encoding_map = {
        # 基础组合乱码
        '涓€閿畨瑁呯▼搴': '一键安装程序',
        '涓€閿': '一键',
        '畨瑁': '安装',
        '▼搴': '程序',
        '鍥藉唴鍫': '国内堆',
        '绋冲畾鐗': '稳定版',
        '杩斿洖涓昏彍鍗': '返回主菜单',
        '鎻愮ず': '提示',
        '鎵€鏈夊畨瑁呴兘灏嗛€€鍑烘湰': '所有安装都将退出本',
        '宸ュ叿绠': '工具箱',
        '浠ユ墽琛屽畼鏂硅剼鏈': '以执行官方脚本',
        '鍗冲皢閫€鍑哄伐鍏风': '即将退出工具',
        '骞跺紑濮嬫墽琛屽閮ㄥ畨瑁呰剼鏈': '并开始执行外部安装脚本',
        '鎴栬€': '或者',
        '鏈畨瑁': '未安装',
        '閰嶇疆宸插浠藉埌': '配置已备份到',
        '澶囦唤鐩綍涓嶅瓨鍦': '备份目录不存在',
        '鍙敤鐨勫浠芥枃浠': '可用的备份文件',
        '鍙戠幇鏂扮増鏈彲鐢': '发现新版本可用',
        '浣跨敤': '使用',
        '杩涜鏇存柊': '进行更新',
        
        # 新发现的乱码组合
        '鏍￠獙': '校验',
        '瀹為檯': '实际',
        '鐢ㄦ湜': '用户',
        '閫€鍑虹爜': '退出码',
        '宸ュ叿绠卞': '工具箱',
        '鏇存柊鎴愬姛': '更新成功',
        '鏇存柊澶辫触': '更新失败',
        '宸ュ叿绠辨湭瀹夎': '工具箱未安装',
        '鏃犻渶鍗歌浇': '无需卸载',
        '寮€濮嬪嵏杞': '开始卸载',
        '鍗歌浇瀹屾垚': '卸载完成',
        '宸叉垚鍔熷嵏杞': '已成功卸载',
        '纭繚鎵€鏈夋洿鏀圭敓鏁': '确保所有更改生效',
        '寤鸿鎮ㄥ叧闂苟閲嶆柊鎵撳紑缁堢': '建议您关闭并重新打开终端',
        '鎵€鏈夊畨瑁呴兘灏嗛€€鍑烘湰宸ュ叿绠卞苟鎵ц瀹樻柟鑴氭湰': '所有安装都将退出本工具箱并执行官方脚本',
        
        # 单个乱码字符
        '涓': '中',
        '€': '',
        '閿': '键',
        '畨': '安',
        '瑁': '装',
        '呯': '',
        '▼': '程',
        '搴': '序',
        '鍥': '国',
        '藉': '内',
        '唴': '内',
        '鍫': '堆',
        '绋': '稳',
        '冲': '定',
        '畾': '定',
        '鐗': '版',
        '杩': '返',
        '斿': '回',
        '洖': '回',
        '昏': '主',
        '彍': '菜',
        '鍗': '单',
        '鎻': '提',
        '愮': '示',
        'ず': '示',
        '鎵': '所',
        '€': '',
        '鏈': '有',
        '夊': '安',
        '兘': '能',
        '灏': '将',
        '嗛': '',
        '€': '',
        '鍑': '出',
        '烘': '出',
        '湰': '本',
        '浠': '以',
        'ユ': '以',
        '墽': '执',
        '琛': '行',
        '屽': '官',
        '畼': '官',
        '鏂': '方',
        '硅': '脚',
        '剼': '脚',
        '鏈': '本',
        '鍗': '即',
        '冲': '将',
        '皢': '将',
        '€': '',
        '鍑': '出',
        '哄': '出',
        '伐': '工',
        '鍏': '具',
        '风': '箱',
        '骞': '并',
        '跺': '开',
        '紑': '开',
        '濮': '始',
        '嬫': '执',
        '墽': '执',
        '琛': '行',
        '屽': '外',
        '閮': '部',
        'ㄥ': '安',
        '畨': '安',
        '瑁': '装',
        '呰': '脚',
        '剼': '脚',
        '鏈': '本',
        '鎴': '或',
        '栬': '者',
        '€': '',
        '鏈': '未',
        '畨': '安',
        '瑁': '装',
        '閰': '配',
        '嶇': '置',
        '疆': '置',
        '宸': '已',
        '插': '备',
        '浠': '份',
        '藉': '到',
        '埌': '到',
        '澶': '备',
        '囦': '份',
        '唤': '目',
        '鐩': '录',
        '綍': '不',
        '涓': '存',
        '嶅': '在',
        '瓨': '存',
        '鍦': '在',
        '鍙': '可',
        '敤': '用',
        '鐨': '的',
        '勫': '备',
        '浠': '份',
        '芥': '文',
        '枃': '件',
        '浠': '件',
        '鍙': '发',
        '戠': '现',
        '幇': '新',
        '鏂': '版',
        '扮': '本',
        '増': '可',
        '鏈': '用',
        '彲': '可',
        '鐢': '用',
        '浣': '使',
        '跨': '用',
        '敤': '用',
        '杩': '进',
        '涜': '行',
        '鏇': '更',
        '存': '新',
        '柊': '新',
        
        # 新增乱码字符
        '鏍': '校',
        '￠': '',
        '獙': '验',
        '瀹': '实',
        '檯': '际',
        '鐢': '用',
        'ㄦ': '户',
        '湜': '期',
        '虹': '出',
        '爜': '码',
        '绠': '箱',
        '鍗': '卸',
        '歌': '载',
        '浇': '载',
        '嬪': '开',
        '嵏': '卸',
        '杞': '载',
        '畬': '完',
        '鎴': '成',
        '鍔': '功',
        '姛': '功',
        '澶': '失',
        '辫': '败',
        '触': '败',
        '湭': '未',
        '瀹': '安',
        '夎': '装',
        '鏃': '无',
        '犻': '需',
        '渶': '需',
        '寮': '开',
        '€': '',
        '濮': '始',
        '嬪': '开',
        '嵏': '卸',
        '杞': '载',
        '瀹': '完',
        '屾': '成',
        '垚': '成',
        '宸': '已',
        '叉': '成',
        '垚': '成',
        '鍔': '功',
        '熷': '功',
        '嵏': '卸',
        '杞': '载',
        '纭': '确',
        '繚': '保',
        '鎵': '所',
        '€': '',
        '鏈': '有',
        '夋': '更',
        '洿': '改',
        '鏀': '生',
        '圭': '效',
        '敓': '生',
        '鏁': '效',
        '堬': '效',
        '寤': '建',
        '鸿': '议',
        '鎮': '您',
        'ㄥ': '关',
        '叧': '闭',
        '闂': '并',
        '苟': '重',
        '閲': '新',
        '嶆': '打',
        '柊': '开',
        '鎵': '终',
        '撳': '端',
        '紑': '开',
        '缁': '终',
        '堢': '端',
        '銆': '。',
         '锛': '，',
         '岄': '退',
         
         # 最后的乱码字符
         '闈': '非',
         '炰': '交',
         '氦': '互',
         '浜': '模',
         '掓': '式',
         'ā': '模',
         '开': '跳',
         '忥': '过',
         '紝': '，',
         '璺': '跳',
         '宠': '过',
         '繃': '过',
         '辩': '管',
         '鐞': '理',
         '鈺': '★'
    }
    
    files_to_fix = ['lib_install.sh', 'lib_installer.sh']
    
    for filename in files_to_fix:
        try:
            # 读取文件
            with open(filename, 'r', encoding='utf-8') as f:
                content = f.read()
            
            print(f"\n修复 {filename} 文件的编码问题...")
            print("-" * 50)
            
            # 应用修复
            original_content = content
            fixed_count = 0
            
            for garbled, correct in encoding_map.items():
                if garbled in content:
                    content = content.replace(garbled, correct)
                    print(f"✓ 已替换: '{garbled}' -> '{correct}'")
                    fixed_count += 1
            
            # 写回文件
            if content != original_content:
                with open(filename, 'w', encoding='utf-8') as f:
                    f.write(content)
                print(f"\n✓ {filename} 文件编码修复完成，共修复 {fixed_count} 项")
            else:
                print(f"\n✓ {filename} 文件无需修复")
                
        except Exception as e:
            print(f"✗ 修复 {filename} 失败: {e}")
    
    print("\n" + "=" * 60)
    print("所有lib库文件编码修复完成")

if __name__ == "__main__":
    fix_lib_encoding()